package tech.pegasys.teku.bls.impl.blst.swig;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class PT {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PT(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PT obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        blstJNI.delete_PT(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public PT(P1_Affine p) {
    this(blstJNI.new_PT__SWIG_0(P1_Affine.getCPtr(p), p), true);
  }

  public PT(P2_Affine p) {
    this(blstJNI.new_PT__SWIG_1(P2_Affine.getCPtr(p), p), true);
  }

  public PT(P2_Affine p2, P1_Affine p1) {
    this(blstJNI.new_PT__SWIG_2(P2_Affine.getCPtr(p2), p2, P1_Affine.getCPtr(p1), p1), true);
  }

  public PT dup() {
    return new PT(blstJNI.PT_dup(swigCPtr, this), true);
  }

  public boolean is_one() {
    return blstJNI.PT_is_one(swigCPtr, this);
  }

  public boolean is_equal(PT p) {
    return blstJNI.PT_is_equal(swigCPtr, this, PT.getCPtr(p), p);
  }

  public PT sqr() { blstJNI.PT_sqr(swigCPtr, this); return this; }

  public PT mul(PT p) { blstJNI.PT_mul(swigCPtr, this, PT.getCPtr(p), p); return this; }

  public PT final_exp() { blstJNI.PT_final_exp(swigCPtr, this); return this; }

}
