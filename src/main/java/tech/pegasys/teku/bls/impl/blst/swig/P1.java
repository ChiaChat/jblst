package tech.pegasys.teku.bls.impl.blst.swig;
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

public class P1 {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected P1(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(P1 obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        blstJNI.delete_P1(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public P1() {
    this(blstJNI.new_P1__SWIG_0(), true);
  }

  public P1(SecretKey sk) {
    this(blstJNI.new_P1__SWIG_1(SecretKey.getCPtr(sk), sk), true);
  }

  public P1(byte[] in) {
    this(blstJNI.new_P1__SWIG_2(in), true);
  }

  public P1(P1_Affine affine) {
    this(blstJNI.new_P1__SWIG_3(P1_Affine.getCPtr(affine), affine), true);
  }

  public P1 dup() {
    return new P1(blstJNI.P1_dup(swigCPtr, this), true);
  }

  public P1_Affine to_affine() {
    return new P1_Affine(blstJNI.P1_to_affine(swigCPtr, this), true);
  }

  public byte[] serialize() { return blstJNI.P1_serialize(swigCPtr, this); }

  public byte[] compress() { return blstJNI.P1_compress(swigCPtr, this); }

  public boolean on_curve() {
    return blstJNI.P1_on_curve(swigCPtr, this);
  }

  public boolean in_group() {
    return blstJNI.P1_in_group(swigCPtr, this);
  }

  public boolean is_inf() {
    return blstJNI.P1_is_inf(swigCPtr, this);
  }

  public boolean is_equal(P1 p) {
    return blstJNI.P1_is_equal(swigCPtr, this, P1.getCPtr(p), p);
  }

  public void aggregate(P1_Affine in) {
    blstJNI.P1_aggregate(swigCPtr, this, P1_Affine.getCPtr(in), in);
  }

  public P1 sign_with(SecretKey sk) { blstJNI.P1_sign_with(swigCPtr, this, SecretKey.getCPtr(sk), sk); return this; }

  public P1 hash_to(byte[] msg, String DST, byte[] aug) { blstJNI.P1_hash_to__SWIG_0(swigCPtr, this, msg, DST, aug); return this; }

  public P1 hash_to(byte[] msg, String DST) { blstJNI.P1_hash_to__SWIG_2(swigCPtr, this, msg, DST); return this; }

  public P1 hash_to(byte[] msg) { blstJNI.P1_hash_to__SWIG_3(swigCPtr, this, msg); return this; }

  public P1 encode_to(byte[] msg, String DST, byte[] aug) { blstJNI.P1_encode_to__SWIG_0(swigCPtr, this, msg, DST, aug); return this; }

  public P1 encode_to(byte[] msg, String DST) { blstJNI.P1_encode_to__SWIG_2(swigCPtr, this, msg, DST); return this; }

  public P1 encode_to(byte[] msg) { blstJNI.P1_encode_to__SWIG_3(swigCPtr, this, msg); return this; }

  public P1 mult(java.math.BigInteger scalar) { blstJNI.P1_mult(swigCPtr, this, scalar.toByteArray()); return this; }

  public P1 cneg(boolean flag) { blstJNI.P1_cneg(swigCPtr, this, flag); return this; }

  public P1 neg() { blstJNI.P1_neg(swigCPtr, this); return this; }

  public P1 add(P1 a) { blstJNI.P1_add__SWIG_0(swigCPtr, this, P1.getCPtr(a), a); return this; }

  public P1 add(P1_Affine a) { blstJNI.P1_add__SWIG_1(swigCPtr, this, P1_Affine.getCPtr(a), a); return this; }

  public P1 dbl() { blstJNI.P1_dbl(swigCPtr, this); return this; }

  public static P1 generator() {
    return new P1(blstJNI.P1_generator(), true);
  }

}
