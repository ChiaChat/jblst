---
version: 2.1
executors:
  linux_executor: # 2cpu, 4G ram
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    resource_class: medium
    working_directory: ~/project
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2
  mac_os_executor: # 2cpu, 4G ram
    macos:
      xcode: "11.4.0"
    resource_class: medium
    working_directory: ~/project
    environment:
      GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2
      HOMEBREW_NO_AUTO_UPDATE: true

# besu_executor_med_windows: # 2cpu, 4G ram
#   machine:
#     image: "windows-server-2019-vs2019:stable"
#     resource_class: medium
#     shell: powershell.exe -ExecutionPolicy Bypass
#   working_directory: ~/project
#   environment:
#     GRADLE_OPTS: -Xmx2048m -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2


#notify:
#  webhooks:
#    - url: https://hyperledger-rocket-chat-hubot.herokuapp.com/hubot/circleci

commands:
  checkout_code:
    description: "Prepare - Checkout code"
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update

  prepare_linux:
    description: "Generate Linux shared lib"
    steps:
      - run:
          name: Install Packages - build tools
          command: |
            rm ./src/main/resources/x86_64/libjblst.so
            ./gradlew test

#            curl -L -O https://github.com/swig/swig/archive/v4.0.2.tar.gz
#            tar -xzvf v4.0.2.tar.gz
#
#            sudo apt-get update
#            sudo apt-get install -y autoconf libpcre3 libpcre3-dev bison flex openjdk-8-jdk
#
#            cd swig-4.0.2/
#            sh autogen.sh
#            ./configure
#            make
#            sudo make install
#
#            cd ../blst
#            sh build.sh
#            cd ./bindings
#
#            mkdir java
#            cd ./java
#            swig -java -outcurrentdir -package tech.pegasys.teku.bls.impl.blst.swig ../blst.swg
#            gcc -fPIC -c blst_wrap.c -I/usr/lib/jvm/java-8-openjdk-amd64/include/linux -I/usr/lib/jvm/java-8-openjdk-amd64/include -I..
#            cp libjblst.so ../../../src/main/resources/x86_64/



  prepare_macos:
    description: "Generate macOS shared lib"
    steps:
      - run:
          name: Generate mac os shared lib
          command: |
            rm ./src/main/resources/x86_64/libjblst.dylib
            ./gradlew test

#            brew install swig@4.0
#            cd ./blst
#            sh build.sh
#            cd ./bindings
#
#            JDK=$(/usr/libexec/java_home)
#
#            mkdir java
#            cd ./java
#            swig -java -outcurrentdir -package tech.pegasys.teku.bls.impl.blst.swig ../blst.swg
#            gcc -march=native -fPIC -c blst_wrap.c -I$JDK/include/darwin -I$JDK/include -I..
#            gcc -shared blst_wrap.o ../../libblst.a -o libjblst.dylib
#            cp libjblst.dylib ../../../src/main/resources/x86_64/

jobs:
  native-build-linux-x86-64:
    executor: linux_executor
    environment:
      SKIP_GRADLE: true
    steps:
      - checkout_code
      - prepare_linux
  #     - run:
  #         name: build
  #         command: |
  #           ./build.sh
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - altbn128/build/lib/*.so*
  #           - bls12-381/build/lib/*.so*
  #           - secp256k1/build/lib/*.so*
  #     - store_artifacts:
  #         name: Linux altbn128 native build artifacts
  #         path:  altbn128/build/lib
  #         destination: altbn128_linux_x86_64_native_artifacts
  #         when: always
  #     - store_artifacts:
  #         name: Linux bls12-381 native build artifacts
  #         path:  bls12-381/build/lib
  #         destination: bls12_381_linux_x86_64_native_artifacts
  #         when: always
  #     - store_artifacts:
  #         name: Linux secp256k1 native build artifacts
  #         path:  secp256k1/build/lib
  #         destination: secp256k1_linux_x86_64_native_artifacts
  #         when: always
  native-build-macos:
    executor: mac_os_executor
    environment:
      SKIP_GRADLE: true
    steps:
      - checkout_code
      - prepare_macos
  #      - run:
  #          name: build
  #          command: |
  #            ./build.sh
  #      - persist_to_workspace:
  #          root: .
  #          paths:
  #            - altbn128/build/lib/*.*dylib*
  #            - bls12-381/build/lib/*.*dylib*
  #            - secp256k1/build/lib/*.*dylib*
  #      - store_artifacts:
  #          name: macOS altbn128 native build artifacts
  #          path:  altbn128/build/lib
  #          destination: altbn128_macOS_native_artifacts
  #          when: always
  #      - store_artifacts:
  #          name: macOS bls12-381 native build artifacts
  #          path:  bls12-381/build/lib
  #          destination: bls12_381_macOS_native_artifacts
  #          when: always
  #      - store_artifacts:
  #          name: macOS secp256k1 native build artifacts
  #          path:  secp256k1/build/lib
  #          destination: secp256k1_macOS_native_artifacts
  #          when: always
  # final-assembly:
  #   executor: besu_executor_med_linux
  #   steps:
  #     - checkout_code
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: gradle
  #         command: |
  #           ./gradlew --no-daemon --parallel build
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - altbn128/build/libs/*.jar
  #           - bls12-381/build/libs/*.jar
  #           - secp256k1/build/libs/*.jar
  #     - store_artifacts:
  #         name: Final altbn128 build artifacts
  #         path: altbn128/build/libs
  #         destination: secp256k1_jars
  #         when: always
  #     - store_artifacts:
  #         name: Final bls12-381 build artifacts
  #         path: bls12-381/build/libs
  #         destination: secp256k1_jars
  #         when: always
  #     - store_artifacts:
  #         name: Final secp256k1 build artifacts
  #         path: secp256k1/build/libs
  #         destination: secp256k1_jars
  #         when: always
  # publish:
  #   executor: besu_executor_med_linux
  #   steps:
  #     - checkout_code
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: Publish
  #         command: |
  #           ./gradlew --no-daemon --parallel bintrayUpload
workflows:
  version: 2
  default:
    jobs:
      - native-build-linux-x86-64
      - native-build-macos
      # - final-assembly:
      #     requires:
      #       - native-build-linux-x86-64
      #       - native-build-macos
      # - publish:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - /^release-.*/
      #     requires:
      #       - final-assembly
